{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","goods","useState","sortField","setSortField","reverseList","setReverseList","sort","a","b","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,iBAC5BC,EAAoB,SAEbC,EAAM,WACjB,IAAIC,EAAK,UAAOJ,GAChB,EAAkCK,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,OAAQH,GACN,KAAKL,EACHG,EAAQA,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MACF,KAAKV,EACHE,EAAQA,EAAMM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU9C,OAJIN,IACFJ,EAAQA,EAAMW,WAId,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBV,IAAcL,EAA4B,WAAa,IACpFiB,QAAS,kBACPX,EAAaN,IAJjB,iCAUA,wBACEgB,KAAK,SACLD,UAAS,4BAAuBV,IAAcJ,EAAoB,WAAa,IAC/EgB,QAAS,kBACPX,EAAaL,IAJjB,4BAUA,wBACEe,KAAK,SACLD,UAAS,4BAAuBR,EAAc,GAAK,YACnDU,QAAS,WAELT,GADED,IAJR,sBAcgB,KAAdF,GAAoBE,IACpB,wBACES,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPX,EAAa,IACbE,GAAe,IALnB,sBAaJ,6BACGL,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC1FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a9ac558.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  let goods = [...goodsFromServer];\n  const [sortField, setSortField] = useState('');\n  const [reverseList, setReverseList] = useState(false);\n\n  switch (sortField) {\n    case SORT_FIELD_ALPHABETICALLY:\n      goods = goods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SORT_FIELD_LENGTH:\n      goods = goods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (reverseList) {\n    goods = goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortField !== SORT_FIELD_ALPHABETICALLY ? 'is-light' : ''}`}\n          onClick={() => (\n            setSortField(SORT_FIELD_ALPHABETICALLY)\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortField !== SORT_FIELD_LENGTH ? 'is-light' : ''}`}\n          onClick={() => (\n            setSortField(SORT_FIELD_LENGTH)\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reverseList ? '' : 'is-light'}`}\n          onClick={() => {\n            if (reverseList) {\n              setReverseList(false);\n            } else {\n              setReverseList(true);\n            }\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || reverseList) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverseList(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}